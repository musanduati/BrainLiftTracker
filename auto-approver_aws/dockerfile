# Ubuntu-based Dockerfile with simple ChromeDriver fix
FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
        wget \
        unzip \
        python3 \
        python3-pip \
        curl \
        gnupg \
        ca-certificates \
        fonts-liberation \
        libappindicator3-1 \
        libasound2 \
        libatk-bridge2.0-0 \
        libatk1.0-0 \
        libcups2 \
        libdbus-1-3 \
        libdrm2 \
        libgtk-3-0 \
        libnspr4 \
        libnss3 \
        libxcomposite1 \
        libxdamage1 \
        libxrandr2 \
        xdg-utils \
        libxss1 \
        libgconf-2-4

# Install Chrome
RUN wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \
    apt-get install -y ./google-chrome-stable_current_amd64.deb && \
    rm google-chrome-stable_current_amd64.deb

# Install specific ChromeDriver version that works with current Chrome
RUN wget -O chromedriver-linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/139.0.7258.66/linux64/chromedriver-linux64.zip" && \
    unzip chromedriver-linux64.zip && \
    mv chromedriver-linux64/chromedriver /usr/local/bin/ && \
    chmod +x /usr/local/bin/chromedriver && \
    rm -rf chromedriver-linux64.zip chromedriver-linux64/

# Verify installations
RUN google-chrome --version && chromedriver --version

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements_aws.txt .
RUN pip3 install -r requirements_aws.txt

# Copy entire auto-approver directory (includes CSV files)
COPY auto-approver/ ./auto-approver/

# Copy the AWS wrapper script
COPY aws_wrapper.py .

# Create logs directory
RUN mkdir -p /tmp/logs

# Set environment variables for containerized execution
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV DISPLAY=:99

# Set default environment values (can be overridden)
ENV HEADLESS_MODE=true
ENV MAX_APPROVALS=50
ENV DELAY_SECONDS=10

# Run the AWS wrapper
CMD ["python3", "aws_wrapper.py"]
